#!/bin/bash

function RegistrarBuiltins() {
	while read comando	# Leo línea por línea
	do
			vectorBuiltins+=("$comando") # Añado una entrada al array
	done < /usr/bin/root_shield/utilitarios/listado # Archivo fuente. HARDCODEADO; MODIFICAR
}

function RegistrarModulos() {
	case $1 in
	comando)
		while IFS=: read path estado	# Separo la línea por el carácter ":"
		do
			if [ $estado = "on" ]	# Sólo guardo los módulos habilitados
				then
				vectorComando+=("$path") # Añado una entrada al array
			fi
		done < $HOME/.shield/modulos_comando # Archivo fuente
	;;
	periodicos)
		while IFS=: read path estado	# Separo la línea por el carácter ":"
		do
			if [ $estado = "on" ]	# Sólo guardo los módulos habilitados
				then
				vectorPeriodicos+=("$path") # Añado una entrada al array
			fi
		done < $HOME/.shield/modulos_periodicos # Archivo fuente
	;;
	*)
		echo "Algo anda mal"
	;;
	esac
	
	unset IFS
	
	return 0
}

function InicializarModulos() {
	case $1 in
	comando)
	for i in "${vectorComando[@]}":
	do
		ultimoCaracter=${i#${i%?}}
		
		if [ $ultimoCaracter = ":" ]
		then
			path=${i%?}	# le quita el delimitador : del final
		else
			path=$i
		fi
		
		source $path iniciar
		
		if [ $? = 0 ]
		then
			echo "$path: inicialización exitosa."
		else
			echo "$path: inicialización con problemas. Se cerrará la terminal."
			exit 1
		fi
	done
	;;
	periodicos)
	if [ "${#vectorPeriodicos[@]}" -gt 0 ]
	then
		for i in "${vectorPeriodicos[@]}":
		do
			ultimoCaracter=${i#${i%?}}
			
			if [ $ultimoCaracter = ":" ]
			then
				path=${i%?}	# le quita el delimitador : del final
			else
				path=$i
			fi
			
			source $path iniciar
			
			if [ $? = 0 ]
			then
				echo "$path: inicialización exitosa."
			else
				echo "$path: inicialización con problemas. Se cerrará la terminal."
				exit 1
			fi
		done
	else
		echo "No hay módulos periódicos habilitados para el usuario."
	fi
	;;
	esac
	return 0
}

function VerificarCambioArchivos() {

	ultima_modificacion_comandos=$(stat -c "%Y" $HOME/.shield/modulos_comando)
	ultima_modificacion_periodicos=$(stat -c "%Y" $HOME/.shield/modulos_periodicos)

	if [ $(( $tActual - $ultima_modificacion_comandos )) -le $(( $tActual - $ultima_verificacion )) ]; then
		unset ultima_modificacion_periodicos
		unset ultima_modificacion_comandos
		return 1
	else if [ $(( $tActual - $ultima_modificacion_periodicos )) -le $(( $tActual - $ultima_verificacion )) ]; then
		unset ultima_modificacion_periodicos
		unset ultima_modificacion_comandos
		return 1
	fi
	fi
	unset ultima_modificacion_periodicos
	unset ultima_modificacion_comandos
	return 0
}

function detenerModulos() {
	
	for mc in "${vectorComando[@]}":
	do
		ultimoCaracter=${mc#${mc%?}}
			
		if [ $ultimoCaracter = ":" ]
			then
				path=${mc%?}	# le quita el delimitador : del final
			else
				path=$mc
			fi

		if [ ! -z "$path" ]
		then
			source $path detener # manda detener a todos los modulos
		fi
			
	done

	for mp in "${vectorPeriodicos[@]}":
	do
		ultimoCaracter=${mp#${mp%?}}
			
		if [ $ultimoCaracter = ":" ]
			then
				path=${mp%?}	# le quita el delimitador : del final
			else
				path=$mp
			fi
			
		if [ ! -z "$path" ]
		then
			source $path detener # manda detener a todos los modulos
		fi
			
	done
	return 0
}

function sh_log() {
	
	fecha=$( date +%D-%T)	
	ubicacion="$1"
	if [ "$ubicacion" == "-M" ]
	then
		shift		
		ubicacion="Modulo:"$1
	fi
	if [ "$ubicacion" == "-B" ]
	then
		shift		
		ubicacion="Built-in:"$1
			
	fi
	if [ "$ubicacion" == "-N" ]
	then
		ubicacion="Nucleo"
	fi				
		
	tipoLog="$2"
	mensaje="$3"
 		case $tipoLog in
		-w)			
			echo "[$fecha]	[WARNING $ubicacion]: $mensaje" >> /home/$USER/.shield/shell.log
			;;	
		-e)	
			echo "[$fecha]	[ERROR $ubicacion]:   $mensaje" >> /home/$USER/.shield/shell.log
			;;	
		-a)	
			echo "[$fecha]	[AVISO $ubicacion]:   $mensaje" >> /home/$USER/.shield/shell.log
			;;
		esac
	unset mensaje
	unset ubicacion
	unset tipoLog
	unset fecha
	
	return 0

}

function finalizar() {
	unset $input
	unset vectorComando
	unset vectorPeriodico
	unset vectorConfig
	clear
	exit 0 
}
